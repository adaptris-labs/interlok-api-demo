<?xml version="1.0" encoding="UTF-8"?>
<adapter>
  <unique-id>${adapter.unique.id}</unique-id>
  <shared-components>
    <connections>
      <jdbc-pooled-connection>
        <unique-id>LocalMySQL</unique-id>
        <test-statement>SELECT DATABASE(), VERSION(), NOW(), USER();</test-statement>
        <driver-imp>com.mysql.jdbc.Driver</driver-imp>
        <username>${local_db_username}</username>
        <password>${local_db_password}</password>
        <connect-url>${local_db_connect_url}</connect-url>
      </jdbc-pooled-connection>
      <jetty-embedded-connection>
        <unique-id>jetty-connection</unique-id>
      </jetty-embedded-connection>
    </connections>
  </shared-components>
  <channel-list>
    <channel>
      <unique-id>ContactManager</unique-id>
      <message-error-handler class="standard-processing-exception-handler">
        <processing-exception-service class="service-list">
          <services>
            <exception-report-service>
              <exception-serializer class="exception-as-json-with-stacktrace"/>
            </exception-report-service>
            <standalone-producer>
              <producer class="jetty-standard-response-producer">
                <status-provider class="http-configured-status">
                  <status>INTERNAL_ERROR_500</status>
                </status-provider>
                <content-type-provider class="http-configured-content-type-provider">
                  <mime-type>application/json</mime-type>
                </content-type-provider>
                <send-payload>true</send-payload>
              </producer>
            </standalone-producer>
          </services>
        </processing-exception-service>
      </message-error-handler>
      <consume-connection class="shared-connection">
        <lookup-name>jetty-connection</lookup-name>
      </consume-connection>
      <produce-connection class="null-connection"/>
      <workflow-list>
        <standard-workflow>
          <consumer class="jetty-message-consumer">
            <unique-id>/contacts/*</unique-id>
            <destination class="configured-consume-destination">
              <destination>/contacts/*</destination>
            </destination>
            <parameter-handler class="jetty-http-parameters-as-metadata"/>
            <header-handler class="jetty-http-ignore-headers"/>
          </consumer>
          <service-collection class="service-list">
            <services>
              <log-message-service>
                <include-payload>true</include-payload>
                <log-level>DEBUG</log-level>
              </log-message-service>
              <branching-service-collection>
                <unique-id>HTTP Router</unique-id>
                <first-service-id>route</first-service-id>
                <services>
                  <jetty-routing-service>
                    <unique-id>route</unique-id>
                    <route>
                      <url-pattern>^/contacts/swagger$</url-pattern>
                      <method>GET</method>
                      <service-id>swagger</service-id>
                    </route>
                    <route>
                      <url-pattern>^/contacts$</url-pattern>
                      <method>GET</method>
                      <service-id>list</service-id>
                    </route>
                    <route>
                      <url-pattern>^/contacts/(.*)$</url-pattern>
                      <method>GET</method>
                      <metadata-key>ContactId</metadata-key>
                      <service-id>retrieve</service-id>
                    </route>
                    <route>
                      <url-pattern>^/contacts/(.*)$</url-pattern>
                      <method>DELETE</method>
                      <metadata-key>ContactId</metadata-key>
                      <service-id>delete</service-id>
                    </route>
                    <route>
                      <url-pattern>^/contacts$</url-pattern>
                      <method>POST</method>
                      <service-id>save</service-id>
                    </route>
                    <route>
                      <url-pattern>^/contacts/(.*)$</url-pattern>
                      <method>PATCH</method>
                      <metadata-key>ContactId</metadata-key>
                      <service-id>update</service-id>
                    </route>
                    <default-service-id>NotHandled</default-service-id>
                  </jetty-routing-service>
                  <service-list>
                    <unique-id>save</unique-id>
                    <services>
                      <!--
                      {
                        "FirstName" : "Lewin",
                        "LastName" : "Chan",
                        "Email" : "lchan@adaptris-abclabs.com",
                        "Phone" : "0700 987654",
                      }
                      -->
                      <json-path-service>
                        <source class="string-payload-data-input-parameter"/>
                        <json-path-execution>
                          <source class="constant-data-input-parameter">
                            <value>$.FirstName</value>
                          </source>
                          <target class="metadata-data-output-parameter">
                            <metadata-key>FirstName</metadata-key>
                          </target>
                        </json-path-execution>
                        <json-path-execution>
                          <source class="constant-data-input-parameter">
                            <value>$.LastName</value>
                          </source>
                          <target class="metadata-data-output-parameter">
                            <metadata-key>LastName</metadata-key>
                          </target>
                        </json-path-execution>
                        <json-path-execution>
                          <source class="constant-data-input-parameter">
                            <value>$.Email</value>
                          </source>
                          <target class="metadata-data-output-parameter">
                            <metadata-key>Email</metadata-key>
                          </target>
                        </json-path-execution>
                        <json-path-execution>
                          <source class="constant-data-input-parameter">
                            <value>$.Phone</value>
                          </source>
                          <target class="metadata-data-output-parameter">
                            <metadata-key>Phone</metadata-key>
                          </target>
                        </json-path-execution>
                      </json-path-service>
                      <!-- Generate a UID -->
                      <generate-unique-metadata-value-service>
                        <unique-id>Generate ContactID</unique-id>
                        <metadata-key>ContactId</metadata-key>
                      </generate-unique-metadata-value-service>
                      <jdbc-raw-data-capture-service>
                        <unique-id>Insert Contact</unique-id>
                        <connection class="shared-connection">
                          <lookup-name>LocalMySQL</lookup-name>
                        </connection>
                        <statement-timeout>
                          <unit>SECONDS</unit>
                          <interval>30</interval>
                        </statement-timeout>
                        <statement>INSERT INTO `contacts` (id, FirstName, LastName, Phone, Email, LastUpdated, Created) VALUES ('%message{ContactId}','%message{FirstName}','%message{LastName}','%message{Phone}','%message{Email}',NOW(),NOW());</statement>
                      </jdbc-raw-data-capture-service>
                      <payload-from-metadata-service>
                        <unique-id>Return ID</unique-id>
                        <metadata-tokens>
                          <key-value-pair>
                            <key>ContactId</key>
                            <value>__CONTACT_ID__</value>
                          </key-value-pair>
                        </metadata-tokens>
                        <template><![CDATA[{"id" : "__CONTACT_ID__"}]]></template>
                      </payload-from-metadata-service>
                    </services>
                  </service-list>

                  <service-list>
                    <unique-id>update</unique-id>
                    <services>
                    <!--
                      {
                        "FirstName" : "Lewin",
                        "LastName" : "Chan",
                        "Email" : "lchan@adaptris-abclabs.com",
                        "Phone" : "0700 987654",
                      }
                    -->
                      <json-path-service>
                        <source class="string-payload-data-input-parameter"/>
                        <json-path-execution>
                          <source class="constant-data-input-parameter">
                            <value>$.FirstName</value>
                          </source>
                          <target class="metadata-data-output-parameter">
                            <metadata-key>FirstName</metadata-key>
                          </target>
                        </json-path-execution>
                        <json-path-execution>
                          <source class="constant-data-input-parameter">
                            <value>$.LastName</value>
                          </source>
                          <target class="metadata-data-output-parameter">
                            <metadata-key>LastName</metadata-key>
                          </target>
                        </json-path-execution>
                        <json-path-execution>
                          <source class="constant-data-input-parameter">
                            <value>$.Email</value>
                          </source>
                          <target class="metadata-data-output-parameter">
                            <metadata-key>Email</metadata-key>
                          </target>
                        </json-path-execution>
                        <json-path-execution>
                          <source class="constant-data-input-parameter">
                            <value>$.Phone</value>
                          </source>
                          <target class="metadata-data-output-parameter">
                            <metadata-key>Phone</metadata-key>
                          </target>
                        </json-path-execution>
                      </json-path-service>

                      <jdbc-raw-data-capture-service>
                        <unique-id>Update Contact</unique-id>
                        <connection class="shared-connection">
                          <lookup-name>LocalMySQL</lookup-name>
                        </connection>
                        <statement-timeout>
                          <unit>SECONDS</unit>
                          <interval>30</interval>
                        </statement-timeout>
                        <statement>UPDATE contacts SET FirstName='%message{FirstName}', LastName='%message{LastName}', Phone='%message{Phone}', Email='%message{Email}', LastUpdated=NOW() where id='%message{ContactId}'</statement>
                      </jdbc-raw-data-capture-service>
                      <jdbc-data-query-service>
                        <unique-id>Select Contact Records</unique-id>
                        <connection class="shared-connection">
                          <lookup-name>LocalMySQL</lookup-name>
                        </connection>
                        <statement-creator class="jdbc-configured-sql-statement">
                          <statement>select * from contacts where id='%message{ContactId}'</statement>
                        </statement-creator>
                        <result-set-translator class="jdbc-json-payload-translator"/>
                      </jdbc-data-query-service>
                    </services>
                  </service-list>


                  <service-list>
                    <unique-id>delete</unique-id>
                    <services>
                      <jdbc-raw-data-capture-service>
                        <unique-id>Delete Contact</unique-id>
                        <connection class="shared-connection">
                          <lookup-name>LocalMySQL</lookup-name>
                        </connection>
                        <statement-timeout>
                          <unit>SECONDS</unit>
                          <interval>30</interval>
                        </statement-timeout>
                        <statement>DELETE FROM contacts where id='%message{ContactId}'</statement>
                      </jdbc-raw-data-capture-service>
                      <payload-from-metadata-service>
                        <unique-id>Return ID</unique-id>
                        <metadata-tokens>
                          <key-value-pair>
                            <key>ContactId</key>
                            <value>__CONTACT_ID__</value>
                          </key-value-pair>
                        </metadata-tokens>
                        <template><![CDATA[{"id" : "__CONTACT_ID__", "status": "deleted"}]]></template>
                      </payload-from-metadata-service>
                    </services>
                  </service-list>

                  <service-list>
                    <unique-id>list</unique-id>
                    <services>
                      <jdbc-data-query-service>
                        <unique-id>Select ALL Records</unique-id>
                        <connection class="shared-connection">
                          <lookup-name>LocalMySQL</lookup-name>
                        </connection>
                        <statement-creator class="jdbc-configured-sql-statement">
                          <statement>select * from contacts</statement>
                        </statement-creator>
                        <result-set-translator class="jdbc-json-payload-translator"/>
                      </jdbc-data-query-service>
                    </services>
                  </service-list>

                  <service-list>
                    <unique-id>retrieve</unique-id>
                    <services>
                      <jdbc-data-query-service>
                        <unique-id>Select By ContactID</unique-id>
                        <connection class="shared-connection">
                          <lookup-name>LocalMySQL</lookup-name>
                        </connection>
                        <statement-creator class="jdbc-configured-sql-statement">
                          <statement>select * from contacts where id='%message{ContactId}'</statement>
                        </statement-creator>
                        <result-set-translator class="jdbc-json-payload-translator"/>
                      </jdbc-data-query-service>
                    </services>
                  </service-list>

                  <service-list>
                    <unique-id>swagger</unique-id>
                    <services>
                      <aggregating-fs-consume-service>
                        <fs-consumer>
                          <destination class="consume-destination-from-metadata">
                            <default-destination>${swagger.yaml.file}</default-destination>
                          </destination>
                          <delete-aggregated-files>false</delete-aggregated-files>
                          <message-aggregator class="replace-with-first-message-aggregator"/>
                        </fs-consumer>
                      </aggregating-fs-consume-service>
                      <yaml-to-json>
                        <source class="string-payload-data-input-parameter"/>
                        <target class="string-payload-data-output-parameter"/>
                      </yaml-to-json>
                      <!-- rewrite the swagger so it has the correct hostname -->
                      <json-transform-service>
                        <source-json class="string-payload-data-input-parameter"/>
                        <target-json class="string-payload-data-output-parameter"/>
                        <mapping-spec class="constant-data-input-parameter">
                          <value>[{ "operation": "remove", "spec": {"host": "" }},{"operation": "shift", "spec": { "*": "&amp;","#${adapter.api.hostname}": "host"}}]</value>
                        </mapping-spec>
                        <metadata-filter class="regex-metadata-filter"/>
                      </json-transform-service>
                    </services>
                  </service-list>

                  <service-list>
                    <unique-id>NotHandled</unique-id>
                    <services>
                      <add-metadata-service>
                        <metadata-element>
                          <key>ResponseCode</key>
                          <value>400</value>
                        </metadata-element>
                      </add-metadata-service>
                      <payload-from-metadata-service>
                        <metadata-tokens/>
                        <template><![CDATA[{"Status" : "Not Handled; please check"}]]></template>
                      </payload-from-metadata-service>
                    </services>
                  </service-list>

                </services>
              </branching-service-collection>
              <standalone-producer>
                <unique-id>Send Response</unique-id>
                <producer class="jetty-standard-response-producer">
                  <status-provider class="http-metadata-status">
                    <code-key>ResponseCode</code-key>
                    <default-status>OK_200</default-status>
                  </status-provider>
                  <response-header-provider class="jetty-no-response-headers"/>
                  <content-type-provider class="http-configured-content-type-provider">
                    <mime-type>application/json</mime-type>
                  </content-type-provider>
                  <send-payload>true</send-payload>
                </producer>
              </standalone-producer>
            </services>
          </service-collection>
        </standard-workflow>
      </workflow-list>
    </channel>
  </channel-list>
  <message-error-digester class="standard-message-error-digester">
    <digest-max-size>100</digest-max-size>
    <unique-id>ErrorDigest</unique-id>
  </message-error-digester>
</adapter>